{"version":3,"sources":["we-validator.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["/*!\r\n * we-validator\r\n * version: 2.1.14\r\n * address: https://github.com/ChanceYu/we-validator#readme\r\n * author:  ChanceYu <i.fish@foxmail.com>\r\n * license: MIT\r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine(\"WeValidator\", [], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"WeValidator\"] = factory();\r\n\telse\r\n\t\troot[\"WeValidator\"] = factory();\r\n})(typeof self !== 'undefined' ? self : this, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, {\r\n/******/ \t\t\t\tconfigurable: false,\r\n/******/ \t\t\t\tenumerable: true,\r\n/******/ \t\t\t\tget: getter\r\n/******/ \t\t\t});\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nvar _rules = __webpack_require__(1);\r\n\r\nvar _rules2 = _interopRequireDefault(_rules);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nvar requiredFn = _rules2.default.required.rule;\r\n\r\n/**\r\n * 环境检测\r\n */\r\nvar isWx = typeof wx !== 'undefined' && !!wx.showToast; // 微信小程序\r\nvar isMy = typeof my !== 'undefined' && !!my.showToast; // 支付宝小程序\r\nvar isSwan = typeof swan !== 'undefined' && !!swan.showToast; // 百度智能小程序\r\nvar isTt = typeof tt !== 'undefined' && !!tt.showToast; // 字节跳动小程序\r\nvar isBrowser = typeof window !== 'undefined' && !!window.alert; // 普通浏览器\r\n\r\nvar objString = Object.prototype.toString;\r\n\r\nvar isArray = Array.isArray || function (v) {\r\n  return objString.call(v) === '[object Array]';\r\n};\r\nvar isFunction = function isFunction(v) {\r\n  return objString.call(v) === '[object Function]';\r\n};\r\nvar isRegExp = function isRegExp(v) {\r\n  return objString.call(v) === '[object RegExp]';\r\n};\r\n\r\nvar WeValidator = function () {\r\n\r\n  /**\r\n   * 默认参数\r\n   * @param {object} options\r\n   * @param {object} [options.rules] 验证字段的规则\r\n   * @param {object} [options.messages] 验证字段错误的提示信息\r\n   * @param {function} [options.onMessage] 错误信息显示方式\r\n   * @param {boolean} [options.multiCheck] 是否同时校验多个字段\r\n   */\r\n  function WeValidator() {\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n    _classCallCheck(this, WeValidator);\r\n\r\n    this.options = options;\r\n\r\n    this.required = requiredFn;\r\n    this._checkAllRules();\r\n  }\r\n\r\n  /**\r\n   * 所有校验规则\r\n   */\r\n\r\n\r\n  /**\r\n   * 动态添加验证规则\r\n   * @param {string} ruleName 规则名称\r\n   * @param {object} ruleOption 规则配置\r\n   * @param {string} [ruleOption.message] 默认错误信息文字\r\n   * @param {regexp|function} [ruleOption.rule] 验证规则\r\n   */\r\n\r\n\r\n  /**\r\n   * 验证单个字段数据\r\n   * @param {string} ruleName 规则名称\r\n   * @param {string} value 要验证的值\r\n   * @param {any} param 传递的验证参数\r\n   * @param {boolean} skip 未填跳过校验，仅供内部使用\r\n   */\r\n\r\n\r\n  _createClass(WeValidator, [{\r\n    key: '_showErrorMessage',\r\n\r\n\r\n    /**\r\n     * 显示错误信息\r\n     * @param {object} params 错误信息\r\n     * @param {function} onMessage 自定义提示函数\r\n     */\r\n    value: function _showErrorMessage(params, onMessage) {\r\n      // validatorInstance.checkData(data, onMessage)\r\n      if (isFunction(onMessage)) {\r\n        return onMessage(params);\r\n      }\r\n\r\n      // 参数形式 new WeValidator({ onMessage })\r\n      if (isFunction(this.options.onMessage)) {\r\n        return this.options.onMessage(params);\r\n      }\r\n\r\n      // 全局配置 WeValidator.onMessage\r\n      if (isFunction(WeValidator.onMessage)) {\r\n        return WeValidator.onMessage(params);\r\n      }\r\n\r\n      // 微信小程序\r\n      if (isWx) {\r\n        return wx.showToast({\r\n          title: params.msg,\r\n          icon: 'none'\r\n        });\r\n      }\r\n\r\n      // 支付宝小程序\r\n      if (isMy) {\r\n        return my.showToast({\r\n          content: params.msg,\r\n          type: 'none'\r\n        });\r\n      }\r\n\r\n      // 百度小程序\r\n      if (isSwan) {\r\n        return swan.showToast({\r\n          title: params.msg,\r\n          icon: 'none'\r\n        });\r\n      }\r\n\r\n      // 字节跳动小程序\r\n      if (isTt) {\r\n        return tt.showToast({\r\n          title: params.msg,\r\n          icon: 'none'\r\n        });\r\n      }\r\n\r\n      // 浏览器端\r\n      if (isBrowser) alert(params.msg);\r\n    }\r\n\r\n    /**\r\n     * 获取错误信息内容\r\n     * @param {string} ruleName 规则名称\r\n     * @param {string} attr 字段名称\r\n     * @param {any} param 规则参数\r\n     */\r\n\r\n  }, {\r\n    key: '_getErrorMessage',\r\n    value: function _getErrorMessage(ruleName, attr, param) {\r\n      var messages = this.options.messages;\r\n      var defaultMessage = WeValidator.RULES[ruleName].message;\r\n\r\n      if (messages.hasOwnProperty(attr) && messages[attr][ruleName]) {\r\n        defaultMessage = messages[attr][ruleName];\r\n      }\r\n\r\n      if (defaultMessage) {\r\n        defaultMessage = defaultMessage.replace(/\\{(\\d)\\}/g, function ($0, $1) {\r\n          if (isArray(param)) {\r\n            return param[$1];\r\n          } else {\r\n            return param;\r\n          }\r\n        });\r\n\r\n        return defaultMessage;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 验证配置规则是否无效\r\n     * @param {string} ruleName 规则名称\r\n     * @param {string} attr 字段名称\r\n     */\r\n\r\n  }, {\r\n    key: '_isRuleInvalid',\r\n    value: function _isRuleInvalid(ruleName, attr) {\r\n      if (!WeValidator.RULES.hasOwnProperty(ruleName)) {\r\n        console.warn && console.warn('\\u6CA1\\u6709\\u6B64\\u9A8C\\u8BC1\\u89C4\\u5219\\uFF1A' + ruleName + '\\uFF0C\\u5B57\\u6BB5\\uFF1A' + attr);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 验证所有配置规则是否正确\r\n     */\r\n\r\n  }, {\r\n    key: '_checkAllRules',\r\n    value: function _checkAllRules() {\r\n      var _rules_ = this.options.rules;\r\n\r\n      // 遍历字段\r\n      for (var attr in _rules_) {\r\n        // 遍历验证规则\r\n        for (var ruleName in _rules_[attr]) {\r\n          if (this._isRuleInvalid(ruleName, attr)) continue;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 校验数据，会验证所有配置的字段规则\r\n     * @param {object} data 验证的数据对象\r\n     * @param {function} onMessage 自定义错误信息提示\r\n     * @param {boolean} showMessage 是否显示提示信息，默认显示（内部使用）\r\n     * @param {object} fieldMap 校验的字段，默认校验所有字段（内部使用）\r\n     */\r\n\r\n  }, {\r\n    key: 'checkData',\r\n    value: function checkData(data, onMessage) {\r\n      var showMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\r\n      var fieldMap = arguments[3];\r\n\r\n      var _rules_ = this.options.rules;\r\n      var multiCheck = this.options.multiCheck;\r\n      var hasError = false;\r\n      var errorData = {};\r\n\r\n      this.data = data;\r\n\r\n      // 遍历字段\r\n      for (var attr in _rules_) {\r\n        if (fieldMap && !fieldMap.hasOwnProperty(attr)) continue;\r\n\r\n        // 遍历验证规则\r\n        for (var ruleName in _rules_[attr]) {\r\n          if (this._isRuleInvalid(ruleName, attr)) continue;\r\n\r\n          if (fieldMap) {\r\n            var res = fieldMap[attr];\r\n            if (isArray(res) && res.indexOf(ruleName) === -1) continue;\r\n          }\r\n\r\n          var ruleParam = _rules_[attr][ruleName];\r\n          var value = '';\r\n\r\n          if (data.hasOwnProperty(attr)) {\r\n            value = data[attr];\r\n          }\r\n\r\n          if (isFunction(ruleParam)) {\r\n            ruleParam = ruleParam.call(this, value);\r\n          }\r\n\r\n          var isFieldValid = WeValidator.checkValue.call(this, ruleName, value, ruleParam, true);\r\n\r\n          // 验证不通过\r\n          if (!isFieldValid) {\r\n            hasError = true;\r\n\r\n            var msg = this._getErrorMessage(ruleName, attr, ruleParam);\r\n            var errorParam = null;\r\n\r\n            if (showMessage && msg) {\r\n              errorParam = {\r\n                name: attr,\r\n                value: value,\r\n                param: ruleParam,\r\n                rule: ruleName,\r\n                msg: msg\r\n              };\r\n              errorData[attr] = errorParam;\r\n            }\r\n\r\n            if (!multiCheck) {\r\n              errorParam && this._showErrorMessage(errorParam, onMessage);\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (hasError) {\r\n        if (multiCheck && showMessage) {\r\n          this._showErrorMessage(errorData, onMessage);\r\n        }\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * 校验数据，只校验对应的字段规则\r\n     * @param {object} data 验证的数据对象\r\n     * @param {array} fields 校验的字段\r\n     * @param {function} onMessage 自定义错误信息提示\r\n     * @param {boolean} showMessage 是否显示提示信息，默认显示（内部使用）\r\n     */\r\n\r\n  }, {\r\n    key: 'checkFields',\r\n    value: function checkFields(data, fields, onMessage) {\r\n      var showMessage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\r\n\r\n      if (!isArray(fields)) throw new Error('第二个参数须为数组');\r\n\r\n      // fields: [ '[field]:[rule]' ]\r\n      // fields: [ 'phoneNo' ]  =>  { phoneNo: true }\r\n      // fields: [ 'phoneNo:required' ]  =>  { phoneNo: ['required'] }\r\n      // fields: [ 'phoneNo:required,mobile' ]  =>  { phoneNo: ['required', 'mobile'] }\r\n      var fieldMap = {};\r\n\r\n      fields.forEach(function (item) {\r\n        var arr = item.split(':');\r\n        var field = arr[0];\r\n        var rules = arr[1];\r\n\r\n        if (rules) {\r\n          // 只校验特定规则\r\n          rules = rules.split(',');\r\n          fieldMap[field] = rules;\r\n        } else {\r\n          // 校验 field 字段的所有规则\r\n          fieldMap[field] = true;\r\n        }\r\n      });\r\n\r\n      return this.checkData(data, onMessage, showMessage, fieldMap);\r\n    }\r\n\r\n    /**\r\n     * 校验数据，不会提示错误信息\r\n     * @param {object} data 验证的数据对象\r\n     * @param {array} fields 校验的字段。如果有，只校验对应的字段规则，默认校验所有配置的字段规则\r\n     */\r\n\r\n  }, {\r\n    key: 'isValid',\r\n    value: function isValid(data, fields) {\r\n      if (isArray(fields)) {\r\n        return this.checkFields(data, fields, null, false);\r\n      } else {\r\n        return this.checkData(data, null, false);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 动态添加字段校验\r\n     * @param {object} options 配置参数\r\n     * @param {object} [options.rules] 规则\r\n     * @param {object} [options.messages] 提示消息\r\n     */\r\n\r\n  }, {\r\n    key: 'addRules',\r\n    value: function addRules() {\r\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n      Object.assign(this.options.rules, options.rules || {});\r\n      Object.assign(this.options.messages, options.messages || {});\r\n\r\n      this._checkAllRules();\r\n    }\r\n\r\n    /**\r\n     * 动态移除字段校验\r\n     * @param {array} fields 要删除校验的字段\r\n     */\r\n\r\n  }, {\r\n    key: 'removeRules',\r\n    value: function removeRules(fields) {\r\n      if (!isArray(fields)) throw new Error('参数须为数组');\r\n\r\n      for (var i = 0; i < fields.length; i++) {\r\n        var key = fields[i];\r\n\r\n        delete this.options.rules[key];\r\n      }\r\n    }\r\n  }]);\r\n\r\n  return WeValidator;\r\n}();\r\n\r\nWeValidator.RULES = {};\r\n\r\nWeValidator.addRule = function (ruleName, ruleOption) {\r\n  WeValidator.RULES[ruleName] = ruleOption;\r\n};\r\n\r\nWeValidator.checkValue = function (ruleName, value, param, skip) {\r\n  var rule = WeValidator.RULES[ruleName].rule;\r\n\r\n  if (isRegExp(rule)) {\r\n    if (skip) {\r\n      return !requiredFn(value) || rule.test(value);\r\n    } else {\r\n      return rule.test(value);\r\n    }\r\n  }\r\n\r\n  if (isFunction(rule)) {\r\n    if (ruleName === 'required') {\r\n      return requiredFn(value);\r\n    } else {\r\n      if (skip) {\r\n        return !requiredFn(value) || rule.call(this, value, param);\r\n      } else {\r\n        return rule.call(this, value, param);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nWeValidator.RULES = _rules2.default;\r\nWeValidator.required = requiredFn;\r\n\r\nmodule.exports = WeValidator;\r\n\r\n/***/ }),\r\n/* 1 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n\r\n\r\nmodule.exports = {\r\n  /**\r\n   * 必填\r\n   */\r\n  required: {\r\n    message: '此字段必填',\r\n    rule: function rule(value) {\r\n      if (typeof value === 'number') {\r\n        value = value.toString();\r\n      } else if (typeof value === 'boolean') {\r\n        return true;\r\n      }\r\n      return !!(value && value.length > 0);\r\n    }\r\n  },\r\n  /**\r\n   * 正则通用\r\n   */\r\n  pattern: {\r\n    message: '不符合此验证规则',\r\n    rule: function rule(value, param) {\r\n      return param.test(value);\r\n    }\r\n  },\r\n  /**\r\n   * 电子邮件\r\n   */\r\n  email: {\r\n    message: '请输入有效的电子邮件地址',\r\n    rule: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\r\n  },\r\n  /**\r\n   * 手机号码\r\n   */\r\n  mobile: {\r\n    message: '请输入11位的手机号码',\r\n    rule: /^1[3456789]\\d{9}$/\r\n  },\r\n  /**\r\n   * 座机号，例如：010-1234567、0551-1234567\r\n   */\r\n  tel: {\r\n    message: '请输入座机号',\r\n    rule: /^(\\d{3,4}-)?\\d{7,8}$/\r\n  },\r\n  /**\r\n   * URL网址\r\n   */\r\n  url: {\r\n    message: '请输入有效的网址',\r\n    rule: /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i\r\n  },\r\n  /**\r\n   * 身份证号\r\n   */\r\n  idcard: {\r\n    message: '请输入18位的有效身份证',\r\n    rule: /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/\r\n  },\r\n  /**\r\n   * 字段值相同校验（例如：密码和确认密码）\r\n   */\r\n  equalTo: {\r\n    message: '输入值必须和字段 {0} 相同',\r\n    rule: function rule(value, param) {\r\n      return value === this.data[param];\r\n    }\r\n  },\r\n  /**\r\n   * 字段值不相同校验，与 equalTo 相反\r\n   */\r\n  notEqualTo: {\r\n    message: '输入值不能和字段 {0} 相同',\r\n    rule: function rule(value, param) {\r\n      return value !== this.data[param];\r\n    }\r\n  },\r\n  /**\r\n   * 是否包含某字符\r\n   */\r\n  contains: {\r\n    message: '输入值必须包含 {0}',\r\n    rule: function rule(value, param) {\r\n      return value.indexOf(param) > -1;\r\n    }\r\n  },\r\n  /**\r\n   * 不能包含某字符\r\n   */\r\n  notContains: {\r\n    message: '输入值不能包含 {0}',\r\n    rule: function rule(value, param) {\r\n      return value.indexOf(param) === -1;\r\n    }\r\n  },\r\n  /**\r\n   * 长度为多少的字符串\r\n   */\r\n  length: {\r\n    message: '请输入 {0} 个字符',\r\n    rule: function rule(value, param) {\r\n      return value.length == param;\r\n    }\r\n  },\r\n  /**\r\n   * 最少多长的字符串\r\n   */\r\n  minlength: {\r\n    message: '最少要输入 {0} 个字符',\r\n    rule: function rule(value, param) {\r\n      return value.length >= param;\r\n    }\r\n  },\r\n  /**\r\n   * 最多多长的字符串\r\n   */\r\n  maxlength: {\r\n    message: '最多可以输入 {0} 个字符',\r\n    rule: function rule(value, param) {\r\n      return value.length <= param;\r\n    }\r\n  },\r\n  /**\r\n   * 某个范围长度的字符串\r\n   */\r\n  rangelength: {\r\n    message: '请输入长度在 {0} 到 {1} 之间的字符',\r\n    rule: function rule(value, param) {\r\n      return value.length >= param[0] && value.length <= param[1];\r\n    }\r\n  },\r\n  /**\r\n   * 数字\r\n   */\r\n  number: {\r\n    message: '请输入有效的数字',\r\n    rule: /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/\r\n  },\r\n  /**\r\n   * 正整数数字\r\n   */\r\n  digits: {\r\n    message: '只能输入正整数数字',\r\n    rule: /^\\d+$/\r\n  },\r\n  /**\r\n   * 正整数或负整数数字\r\n   */\r\n  integer: {\r\n    message: '只能输入整数数字',\r\n    rule: /^-?\\d+$/\r\n  },\r\n  /**\r\n   * 大于多少的数字/字段值\r\n   */\r\n  min: {\r\n    message: '请输入大于 {0} 的数字',\r\n    rule: function rule(value, param) {\r\n      if (typeof param === 'string') param = this.data[param];\r\n\r\n      return value >= param;\r\n    }\r\n  },\r\n  /**\r\n   * 小于多少的数字/字段值\r\n   */\r\n  max: {\r\n    message: '请输入小于 {0} 的数字',\r\n    rule: function rule(value, param) {\r\n      if (typeof param === 'string') param = this.data[param];\r\n\r\n      return value <= param;\r\n    }\r\n  },\r\n  /**\r\n   * 大于且小于多少的数字\r\n   */\r\n  range: {\r\n    message: '请输入大于 {0} 且小于 {1} 的数字',\r\n    rule: function rule(value, param) {\r\n      return value >= param[0] && value <= param[1];\r\n    }\r\n  },\r\n  /**\r\n   * 中文字符\r\n   */\r\n  chinese: {\r\n    message: '只能输入中文字符',\r\n    rule: /^[\\u4e00-\\u9fa5]+$/\r\n  },\r\n  /**\r\n   * 最少多少个中文字符\r\n   */\r\n  minChinese: {\r\n    message: '最少输入 {0} 个中文字符',\r\n    rule: function rule(value, param) {\r\n      return new RegExp('^[\\u4E00-\\u9FA5]{' + param + ',}$').test(value);\r\n    }\r\n  },\r\n  /**\r\n   * 最多多少个中文字符\r\n   */\r\n  maxChinese: {\r\n    message: '最多输入 {0} 个中文字符',\r\n    rule: function rule(value, param) {\r\n      return new RegExp('^[\\u4E00-\\u9FA5]{1,' + param + '}$').test(value);\r\n    }\r\n  },\r\n  /**\r\n   * 大于且小于多少个中文字符\r\n   */\r\n  rangeChinese: {\r\n    message: '只能输入 {0} 到 {1} 个中文字符',\r\n    rule: function rule(value, param) {\r\n      return new RegExp('^[\\u4E00-\\u9FA5]{' + param[0] + ',' + param[1] + '}$').test(value);\r\n    }\r\n  },\r\n  /**\r\n   * 日期\r\n   */\r\n  date: {\r\n    message: '请输入有效的日期',\r\n    rule: function rule(value) {\r\n      return !/Invalid|NaN/.test(new Date(value).toString());\r\n    }\r\n  },\r\n  /**\r\n   * 日期（ISO标准格式）例如：2019-09-19，2019/09/19\r\n   */\r\n  dateISO: {\r\n    message: '请输入有效的日期（ISO标准格式）',\r\n    rule: /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/\r\n  },\r\n  /**\r\n   * ipv4地址\r\n   */\r\n  ipv4: {\r\n    message: '请输入有效的IPv4地址',\r\n    rule: /^(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/i\r\n  },\r\n  /**\r\n   * ipv6地址\r\n   */\r\n  ipv6: {\r\n    message: '请输入有效的IPv6地址',\r\n    rule: /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i\r\n  }\r\n};\r\n\r\n/***/ })\r\n/******/ ]);\r\n});"]}